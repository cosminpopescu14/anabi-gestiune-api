// <auto-generated />
using System;
using Anabi.DataAccess.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anabi.DataAccess.Ef.Migrations
{
    [DbContext(typeof(AnabiContext))]
    [Migration("20190330141339_20190330_new_field_in_storagespace")]
    partial class _20190330_new_field_in_storagespace
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AddressDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Building");

                    b.Property<string>("City");

                    b.Property<int>("CountyId");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<string>("FlatNo");

                    b.Property<string>("Floor");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Stair");

                    b.Property<string>("Street");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("AddressId");

                    b.Property<int>("CategoryId");

                    b.Property<int?>("CurrentDecisionId");

                    b.Property<int?>("DecisionId");

                    b.Property<string>("Description");

                    b.Property<int?>("FileDbId");

                    b.Property<string>("Identifier");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("MeasureUnit");

                    b.Property<string>("Name");

                    b.Property<decimal?>("NecessaryVolume");

                    b.Property<int?>("NrOfObjects");

                    b.Property<string>("Remarks");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrentDecisionId");

                    b.HasIndex("FileDbId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDefendantDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("AssetId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("PersonId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("AssetDefendants");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetsFileDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("AssetId");

                    b.Property<int>("FileId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("FileId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("BunuriDosare");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetStorageSpaceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("AssetId");

                    b.Property<DateTime>("EntryDate");

                    b.Property<DateTime?>("ExitDate");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("StorageSpaceId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("StorageSpaceId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("AssetStorageSpaces");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CategoryDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("ForEntity");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CountyDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviation");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CrimeTypeDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("CrimeName")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("CrimeTypes");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.DecisionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.DefendantsFileDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("DefendantId");

                    b.Property<int>("FileId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("PersonId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("DefendantId");

                    b.HasIndex("FileId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("InculpatiDosar");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.FileDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("CriminalField");

                    b.Property<string>("CurrentFileNumber");

                    b.Property<int>("CurrentFileNumberId");

                    b.Property<int?>("CurrentNumberId");

                    b.Property<decimal>("DamageAmount");

                    b.Property<string>("DamageCurrency");

                    b.Property<int>("InitialFileId");

                    b.Property<string>("InitialFileNumber");

                    b.Property<int?>("InitialNumberId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("LegalClassification");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("CurrentNumberId");

                    b.HasIndex("InitialNumberId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("Dosare");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.FileNumberDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("FileDbId");

                    b.Property<string>("FileNumber");

                    b.Property<int>("InstitutionId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<DateTime>("NumberDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("FileDbId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("NumereDosare");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.HistoricalStageDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualValue");

                    b.Property<string>("ActualValueCurrency");

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("AssetId");

                    b.Property<string>("AssetState");

                    b.Property<int?>("CrimeTypeId");

                    b.Property<DateTime>("DecisionDate");

                    b.Property<int?>("DecisionId");

                    b.Property<string>("DecisionNumber");

                    b.Property<int?>("DecizieId");

                    b.Property<DateTime?>("DefinitiveDate");

                    b.Property<decimal?>("EstimatedAmount");

                    b.Property<string>("EstimatedAmountCurrency");

                    b.Property<string>("EvaluationCommittee");

                    b.Property<DateTime?>("EvaluationCommitteeDesignationDate");

                    b.Property<string>("EvaluationCommitteePresident")
                        .HasMaxLength(200);

                    b.Property<string>("FileNumber")
                        .HasMaxLength(200);

                    b.Property<string>("FileNumberParquet")
                        .HasMaxLength(200);

                    b.Property<int?>("InstitutionId");

                    b.Property<bool?>("IsDefinitive");

                    b.Property<int?>("IssuingInstitutionId");

                    b.Property<DateTime?>("LastActivity");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("LegalBasis");

                    b.Property<int?>("OwnerId");

                    b.Property<int?>("PersonId");

                    b.Property<string>("PersonResponsible")
                        .HasMaxLength(200);

                    b.Property<int?>("PrecautionaryMeasureId");

                    b.Property<DateTime?>("ReceivingDate");

                    b.Property<int?>("RecoveryBeneficiaryId");

                    b.Property<string>("RecoveryCommittee");

                    b.Property<DateTime?>("RecoveryCommitteeDesignationDate");

                    b.Property<string>("RecoveryCommitteePresident")
                        .HasMaxLength(200);

                    b.Property<string>("RecoveryState");

                    b.Property<DateTime?>("SendToAuthoritiesDate");

                    b.Property<bool?>("SentOnEmail");

                    b.Property<string>("Source")
                        .HasMaxLength(500);

                    b.Property<int>("StageId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CrimeTypeId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("IssuingInstitutionId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PrecautionaryMeasureId");

                    b.HasIndex("RecoveryBeneficiaryId");

                    b.HasIndex("StageId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("HistoricalStages");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.IdentifierDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("IdentifierType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsForPerson");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("Identifiers");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.InstitutionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("AddressId");

                    b.Property<int>("CategoryId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PersonDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("AddressId");

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumber");

                    b.Property<string>("IdSerie");

                    b.Property<string>("Identification");

                    b.Property<int>("IdentifierId");

                    b.Property<bool>("IsPerson");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.Property<int?>("UserDbId");

                    b.Property<int?>("UserDbId1");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IdentifierId");

                    b.HasIndex("UserDbId");

                    b.HasIndex("UserDbId1");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PrecautionaryMeasureDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("Code");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("PrecautionaryMeasures");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.RecoveryBeneficiaryDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("RecoveryBeneficiaries");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StageDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsFinal");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<int?>("StageCategory");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StagesForDecisionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DecisionId");

                    b.Property<int>("StageId");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId");

                    b.HasIndex("StageId");

                    b.ToTable("StagesForDecisions");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<decimal?>("AsphaltedArea");

                    b.Property<decimal?>("AvailableVolume");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("ContactData");

                    b.Property<string>("Description");

                    b.Property<decimal?>("Length");

                    b.Property<string>("MaintenanceMentions");

                    b.Property<decimal?>("MonthlyMaintenanceCost");

                    b.Property<string>("Name");

                    b.Property<int>("StorageSpacesType");

                    b.Property<decimal?>("TotalVolume");

                    b.Property<decimal?>("UndevelopedArea");

                    b.Property<decimal?>("Width");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("CategoryId");

                    b.ToTable("StorageSpaces");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.UserDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Salt");

                    b.Property<string>("UserCode");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AddressDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CountyDb", "County")
                        .WithMany("Addresses")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithMany("Assets")
                        .HasForeignKey("AddressId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.DecisionDb", "CurrentDecision")
                        .WithMany("Assets")
                        .HasForeignKey("CurrentDecisionId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileDb")
                        .WithMany("Assets")
                        .HasForeignKey("FileDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDefendantDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("Defendants")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Person")
                        .WithMany("Defendants")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetDefendantsAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetDefendantsChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetsFileDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("FilesForAsset")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileDb", "File")
                        .WithMany("AssetsFile")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsFileAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsFileChange")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetStorageSpaceDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("AssetsStorageSpaces")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", "StorageSpace")
                        .WithMany("AssetsStorageSpaces")
                        .HasForeignKey("StorageSpaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsStorageSpacesAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("AssetsStorageSpacesChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CategoryDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.DefendantsFileDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Defendant")
                        .WithMany("Files")
                        .HasForeignKey("DefendantId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileDb", "File")
                        .WithMany("Defendants")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("DefendantFilesAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("DefendantFilesChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.FileDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileNumberDb", "CurrentNumber")
                        .WithMany()
                        .HasForeignKey("CurrentNumberId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileNumberDb", "InitialNumber")
                        .WithMany()
                        .HasForeignKey("InitialNumberId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("FilesAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("FilesChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.FileNumberDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.FileDb")
                        .WithMany("Numbers")
                        .HasForeignKey("FileDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.InstitutionDb", "Institution")
                        .WithMany("FileNumbers")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("FilesNumbersAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("FilesNumbersChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.HistoricalStageDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CrimeTypeDb", "CrimeType")
                        .WithMany()
                        .HasForeignKey("CrimeTypeId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.DecisionDb", "Decision")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("DecisionId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.InstitutionDb", "IssuingInstitution")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("IssuingInstitutionId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Person")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("PersonId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PrecautionaryMeasureDb", "PrecautionaryMeasure")
                        .WithMany("Stages")
                        .HasForeignKey("PrecautionaryMeasureId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.RecoveryBeneficiaryDb", "RecoveryBeneficiary")
                        .WithMany()
                        .HasForeignKey("RecoveryBeneficiaryId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StageDb", "Stage")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("HistoricalStagesAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("HistoricalStagesChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.IdentifierDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("IdentifiersAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("IdentifiersChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.InstitutionDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithMany("Institutions")
                        .HasForeignKey("AddressId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Category")
                        .WithMany("Institutions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("InstitutionsAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("InstitutionsChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PersonDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithMany("Persons")
                        .HasForeignKey("AddressId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.IdentifierDb", "Identifier")
                        .WithMany("Persons")
                        .HasForeignKey("IdentifierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("PersonsAdded")
                        .HasForeignKey("UserDbId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.UserDb")
                        .WithMany("PersonsChanged")
                        .HasForeignKey("UserDbId1");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StageDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StageDb", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StagesForDecisionDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.DecisionDb", "Decision")
                        .WithMany("PossibleStages")
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StageDb", "Stage")
                        .WithMany("PossibleDecisions")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithOne("StorageRoom")
                        .HasForeignKey("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Category")
                        .WithMany("StorageSpaces")
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
